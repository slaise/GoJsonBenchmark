// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  main

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( Entities ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Entities ) UnmarshalJSON([]byte) error { return nil }
func ( Entities ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Entities ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Entities *Entities

func ( Hashtag ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Hashtag ) UnmarshalJSON([]byte) error { return nil }
func ( Hashtag ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Hashtag ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Hashtag *Hashtag

func ( LargeStruct ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* LargeStruct ) UnmarshalJSON([]byte) error { return nil }
func ( LargeStruct ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* LargeStruct ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_LargeStruct *LargeStruct

func ( SearchMetadata ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SearchMetadata ) UnmarshalJSON([]byte) error { return nil }
func ( SearchMetadata ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SearchMetadata ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SearchMetadata *SearchMetadata

func ( Status ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Status ) UnmarshalJSON([]byte) error { return nil }
func ( Status ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Status ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Status *Status

func ( StatusMetadata ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* StatusMetadata ) UnmarshalJSON([]byte) error { return nil }
func ( StatusMetadata ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* StatusMetadata ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_StatusMetadata *StatusMetadata

func ( URL ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* URL ) UnmarshalJSON([]byte) error { return nil }
func ( URL ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* URL ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_URL *URL

func ( User ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* User ) UnmarshalJSON([]byte) error { return nil }
func ( User ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* User ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_User *User

func ( UserEntities ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* UserEntities ) UnmarshalJSON([]byte) error { return nil }
func ( UserEntities ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* UserEntities ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_UserEntities *UserEntities

func ( UserEntityDescription ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* UserEntityDescription ) UnmarshalJSON([]byte) error { return nil }
func ( UserEntityDescription ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* UserEntityDescription ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_UserEntityDescription *UserEntityDescription

func ( UserEntityURL ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* UserEntityURL ) UnmarshalJSON([]byte) error { return nil }
func ( UserEntityURL ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* UserEntityURL ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_UserEntityURL *UserEntityURL
